<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.companyname.userRoleFunction.bean.SysRoleFunctionMapper" >
  <resultMap id="BaseResultMap" type="com.companyname.userRoleFunction.bean.SysRoleFunction" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="function_id" property="functionId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_id, function_id
  </sql>
  
  
  
  
  <select id="roleAndMenuByRoleId" resultType="Map" parameterType="java.lang.Integer" >
    select sys_function.id as MENU_ID from sys_role, sys_role_function, sys_function 
	where sys_role.id = sys_role_function.role_id
	and sys_role_function.function_id = sys_function.id
	and sys_role.flag = 1
	and sys_function.flag = 1
	and sys_role.id = #{id,jdbcType=INTEGER}
  </select>
  
  
  
  <delete id="deleteFunctionByRoleId" parameterType="java.lang.Integer" >
    delete from sys_role_function
    where role_id = #{role_id,jdbcType=INTEGER}
  </delete>
  
  
  <insert id="addFunctionIdAndRoleId" parameterType="com.companyname.userRoleFunction.bean.SysRoleFunction" >
    insert into sys_role_function (role_id, function_id)
    
    values 
    
    <foreach collection="functionIds_list" item="functionIds_list_every" index="index" separator="," >  
	        (#{role_id,jdbcType=INTEGER}, #{functionIds_list_every,jdbcType=INTEGER})
	    </foreach>  
  </insert>
  
  
  
  
  
  
  
  
  
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_role_function
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_role_function
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.companyname.userRoleFunction.bean.SysRoleFunction" >
    insert into sys_role_function (id, role_id, function_id
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{functionId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.companyname.userRoleFunction.bean.SysRoleFunction" >
    insert into sys_role_function
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="functionId != null" >
        function_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="functionId != null" >
        #{functionId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.companyname.userRoleFunction.bean.SysRoleFunction" >
    update sys_role_function
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="functionId != null" >
        function_id = #{functionId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.companyname.userRoleFunction.bean.SysRoleFunction" >
    update sys_role_function
    set role_id = #{roleId,jdbcType=INTEGER},
      function_id = #{functionId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>