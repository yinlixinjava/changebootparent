<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.companyname.userRoleFunction.bean.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.companyname.userRoleFunction.bean.SysUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="salary" property="salary" jdbcType="DECIMAL" />
    <result column="birthday" property="birthday" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="station" property="station" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, salary, birthday, gender, station, telephone, email, createtime, flag, remark, nickname
  </sql>
  
  
  
  <!-- 根据用户名查询用户名和密码   yinlixin -->
  <select id="findPassword" parameterType="Map" resultType="com.companyname.userRoleFunction.bean.SysUser" >
	select username,password from sys_user where username = #{username} and sys_user.flag = 1
  </select>
  
  <!-- 查询所有的user yinlixin yinlixin -->
  <select id="findUser" resultType="com.companyname.userRoleFunction.bean.SysUser" >
	select id, username, telephone, createtime, remark,nickname,salary from sys_user where sys_user.flag = 1
  </select>
  
  	<!-- 删除用户时的方法 -->
  <update id="updateByPrimaryKey" parameterType="Map" >
    update sys_user set flag = 0, createtime = #{newTime} where id = #{id}
  </update>
  
  
  <!-- 查询用户名是否被注册过了 yinlixin yinlixin -->
  <select id="countUser" resultType="Map" >
	select count(1) as countNum from sys_user where sys_user.flag = 1 and sys_user.username=#{username}
  </select>
  
  
   <!-- 查询手机是否被注册过了 yinlixin yinlixin -->
  <select id="countTelephone" resultType="Map" >
	select count(1) as countNum from sys_user where sys_user.flag = 1 and sys_user.telephone=#{telephone}
  </select>
  
  
  
  
  
  <!-- 修改密码的方法 -->
  <update id="updatepwd" parameterType="Map" >
    update sys_user set password = #{password} where username = #{username} and flag = 1
  </update>
  
  
  
  
  <insert id="addUser" parameterType="com.companyname.userRoleFunction.bean.SysUser" >
  
    insert into sys_user
    
    <selectKey resultType="int" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID() AS id
    </selectKey>
    
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="station != null" >
        station,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="station != null" >
        #{station,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  
  
<update id="updateUser" parameterType="com.companyname.userRoleFunction.bean.SysUser" >
    update sys_user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="station != null" >
        station = #{station,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  
  
  
  
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.companyname.userRoleFunction.bean.SysUser" >
    insert into sys_user (id, username, password, 
      salary, birthday, gender, 
      station, telephone, email, 
      createtime, flag, remark, 
      nickname)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{salary,jdbcType=DECIMAL}, #{birthday,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{station,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=VARCHAR}, #{flag,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{nickname,jdbcType=VARCHAR})
  </insert>
  

  <!-- <update id="updateByPrimaryKey" parameterType="com.companyname.userRoleFunction.bean.SysUser" >
    update sys_user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DECIMAL},
      birthday = #{birthday,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      station = #{station,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update> -->
</mapper>